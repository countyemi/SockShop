# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1      

      # Create bucket to store state file
      - name: Check if state bucket exists
        id: check-bucket
        run: |
          bucket_name="bald-eagle-sockshop-state-2433"
          if aws s3api head-bucket --bucket "$bucket_name" 2>/dev/null; then
            echo "::set-output name=bucket_exists::true"
          else
            echo "::set-output name=bucket_exists::false"
          fi

      - name: Create Bucket for state file
        if: steps.check-bucket.outputs.bucket_exists == 'false'
        run: |
          aws s3 mb s3://bald-eagle-sockshop-state-2433
        
        
      # Set up Terraform and create cluster
      - name: Set up terraform
        uses: hashicorp/setup-terraform@v2
        with: 
          terraform_version: 1.9.2
          
      - name: Check if EKS cluster exists in region
        id: check-cluster
        run: | 
          cluster_name="SockShop-Cluster"
          if aws eks describe-cluster --name "$cluster_name" --region us-east-1 > /dev/null 2>&1; then
            echo "::set-output name=cluster_exists::true"
          else
            echo "::set-output name=cluster_exists::false"
          fi
          
      - name: Create EKS cluster
        if: steps.check-cluster.outputs.cluster_exists == 'false'
        run: |
          terraform  -chdir=terraform/ init
          terraform  -chdir=terraform/ apply --auto-approve    

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.9.4

      - name: Update Kubeconfig file
        run: |
          aws eks update-kubeconfig --name SockShop-Cluster --region us-east-1
          kubectl create namespace sock-shop

  #set up lets-encrypt certificate manager
      - name: Install cert-manager CRDs
        run: |
          kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.5.3/cert-manager.crds.yaml
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.1/cert-manager.yaml

          

      - name: Update Helm dependencies and install 
        run: |
          helm dependency update ./SockShopChart 
          helm install sock1 ./SockShopChart --namespace sock-shop     
          

        

